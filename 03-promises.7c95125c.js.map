{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAQD,EACd,OAAO,IAAIE,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,C,SAAEJ,E,MAAUC,IAEtBI,EAAO,C,SAAEL,E,MAAUC,GAAQ,GAC1BC,EAAM,G,CAXQQ,SAASC,cAAc,SA0C/BC,iBAAiB,UA3B9B,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEVC,QAAQC,IAAIL,EAAMM,MAAOL,EAAKK,MAAOJ,EAAOI,OAE5C,MAAMC,EAAcC,OAAOR,EAAMM,OAC3BG,EAAaD,OAAOP,EAAKK,OACzBI,EAAeF,OAAON,EAAOI,OACnC,IAAIK,EAAWJ,EACf,IAAK,IAAIK,EAAI,EAAGA,EAAIF,EAAcE,GAAK,EACrC7B,EAAc6B,EAAI,EAAGD,GAClBE,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,MACjB6B,EAAAjC,GAASkC,OAAOC,QACd,uBAAqBhC,QAAiBC,MAAU,IAGnDgC,OAAM,EAACjC,SAAEA,EAAQC,MAAEA,MAClB6B,EAAAjC,GAASkC,OAAOG,QACd,sBAAoBlC,QAAeC,MAAU,IAGnD0B,GAAYF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// const dalayEl = document.querySelector('[name = delay]');\n// const stepEl = document.querySelector('[name = step]');\n// const amountEl = document.querySelector('[name = amount]');\nconst formSubmitEl = document.querySelector('.form');\nfunction createPromise(position, delay) {\n  const DELAY = delay;\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, DELAY);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  console.log(delay.value, step.value, amount.value);\n\n  const dalayNumber = Number(delay.value);\n  const stepNumber = Number(step.value);\n  const amountNumber = Number(amount.value);\n  let dalayAdd = dalayNumber;\n  for (let i = 0; i < amountNumber; i += 1) {\n    createPromise(i + 1, dalayAdd)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    dalayAdd += stepNumber;\n  }\n}\nformSubmitEl.addEventListener('submit', handleSubmit);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","DELAY","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","console","log","value","dalayNumber","Number","stepNumber","amountNumber","dalayAdd","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.7c95125c.js.map"}